{"ast":null,"code":"var _jsxFileName = \"/Users/kayydv/Library/CloudStorage/OneDrive-FloridaInstituteofTechnology/Summer 2022/Intro to Software Engineering/term-project/summer-project/src/components/validator_fields/PasswordField.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordField = () => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [passwordErr, setPasswordErr] = useState(false);\n\n  const handlePasswordChange = e => {\n    e.preventDefault();\n    let pass = e.target.value; // check for password for at least 6-12 chars, one uppercase,\n    // one lowercase, one number, and one special character.\n\n    let regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,12}$/; // if format is valid, set password; else, return error.\n\n    if (regex.test(pass)) {\n      setPasswordErr(false);\n      setPassword(pass);\n    } else {\n      setPasswordErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"grid grid-rows-7\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"row-span-3 mb-2 flex items-center justify-center\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rows-span-3 mb-2 flex items-center justify-center mx-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onBlur: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), passwordErr && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-end justify-center mx-3 text-red-500 text-sm\",\n      children: \"Invalid Password!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordField, \"/BhwcHxu7qPFe83SXXIEzzr49GU=\");\n\n_c = PasswordField;\nexport default PasswordField;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"names":["React","useState","PasswordField","password","setPassword","passwordErr","setPasswordErr","handlePasswordChange","e","preventDefault","pass","target","value","regex","test"],"sources":["/Users/kayydv/Library/CloudStorage/OneDrive-FloridaInstituteofTechnology/Summer 2022/Intro to Software Engineering/term-project/summer-project/src/components/validator_fields/PasswordField.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\n\nconst PasswordField = () => {\n\n    const [password, setPassword] = useState('');\n    const [passwordErr, setPasswordErr] = useState(false);\n    \n    const handlePasswordChange = (e) => {\n    \n        e.preventDefault();\n      \n      let pass = e.target.value;\n    \n        // check for password for at least 6-12 chars, one uppercase,\n        // one lowercase, one number, and one special character.\n        let regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,12}$/;\n    \n        // if format is valid, set password; else, return error.\n        if ( regex.test(pass) ) {\n          setPasswordErr(false);\n          setPassword(pass);\n        }\n        else {\n          setPasswordErr(true);\n        }\n    \n    }\n\n  return (\n\n    <span className='grid grid-rows-7'>\n      <label className='row-span-3 mb-2 flex items-center justify-center'>\n        Password:\n      </label>\n      <div className='rows-span-3 mb-2 flex items-center justify-center mx-3'>\n        <input\n          type=\"email\"\n          onBlur={ handlePasswordChange }\n          />\n      </div>\n\n      {passwordErr &&\n          <div className='flex items-end justify-center mx-3 text-red-500 text-sm'>\n            Invalid Password!\n          </div>  \n      }\n      \n      </span>\n      \n  )\n}\n\nexport default PasswordField;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAExB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMM,oBAAoB,GAAIC,CAAD,IAAO;IAEhCA,CAAC,CAACC,cAAF;IAEF,IAAIC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,KAApB,CAJkC,CAMhC;IACA;;IACA,IAAIC,KAAK,GAAG,yCAAZ,CARgC,CAUhC;;IACA,IAAKA,KAAK,CAACC,IAAN,CAAWJ,IAAX,CAAL,EAAwB;MACtBJ,cAAc,CAAC,KAAD,CAAd;MACAF,WAAW,CAACM,IAAD,CAAX;IACD,CAHD,MAIK;MACHJ,cAAc,CAAC,IAAD,CAAd;IACD;EAEJ,CAnBD;;EAqBF,oBAEE;IAAM,SAAS,EAAC,kBAAhB;IAAA,wBACE;MAAO,SAAS,EAAC,kDAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,wDAAf;MAAA,uBACE;QACE,IAAI,EAAC,OADP;QAEE,MAAM,EAAGC;MAFX;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,EAWGF,WAAW,iBACR;MAAK,SAAS,EAAC,yDAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZN;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAsBD,CAhDD;;GAAMH,a;;KAAAA,a;AAkDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}